# This file generated by Quarto; do not edit by hand.
# shiny_mode: core

from __future__ import annotations

from pathlib import Path
from shiny import App, Inputs, Outputs, Session, ui




def server(input: Inputs, output: Outputs, session: Session) -> None:
    import seaborn as sns
    import matplotlib.pyplot as plt
    from shiny import App, render, ui

    faithful = sns.load_dataset("geyser")
    x = faithful.waiting

    # ========================================================================

    ui.input_slider(
            id="n", 
            label="Number of bins:", 
            min=1, 
            max=50, 
            value=25,
            ticks=True)

    # ========================================================================

    @render.plot(alt="Histogram of waiting times")
    def histogram():
        plt.hist(
            x, 
            bins = input.n(), 
            density=False, 
            color="#BB74DB",
            edgecolor="white")
        plt.title("Histogram of waiting times")
        plt.xlabel("Waiting time to next eruption [mins]")
        plt.ylabel("Frequency")

    # ========================================================================



    return None


_static_assets = ["index_files","index_files/libs/quarto-html/tippy.css","index_files/libs/quarto-html/quarto-syntax-highlighting.css","index_files/libs/bootstrap/bootstrap-icons.css","index_files/libs/bootstrap/bootstrap.min.css","index_files/libs/clipboard/clipboard.min.js","index_files/libs/quarto-html/quarto.js","index_files/libs/quarto-html/popper.min.js","index_files/libs/quarto-html/tippy.umd.min.js","index_files/libs/quarto-html/anchor.min.js","index_files/libs/bootstrap/bootstrap.min.js"]
_static_assets = {"/" + sa: Path(__file__).parent / sa for sa in _static_assets}

app = App(
    Path(__file__).parent / "index.html",
    server,
    static_assets=_static_assets,
)
